-- Arc Premium GUI - Enhanced Version
-- By YourName

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Main player references
local plr = Players.LocalPlayer
local playerGui = plr:WaitForChild("PlayerGui")

-- Enhanced Color scheme with additional shades
local colors = {
    background = Color3.fromRGB(15, 15, 20),
    primary = Color3.fromRGB(212, 175, 55),  -- Gold
    secondary = Color3.fromRGB(25, 25, 30),
    accent = Color3.fromRGB(230, 190, 70),   -- Brighter gold
    text = Color3.fromRGB(240, 240, 240),
    stroke = Color3.fromRGB(212, 175, 55),
    darkGold = Color3.fromRGB(150, 120, 40),
    lightGold = Color3.fromRGB(240, 200, 80)
}

-- Command storage with more examples
local commands = {
    {
        name = "Teleport to Player",
        code = [[
            local target = "PlayerName"
            local player = game:GetService("Players"):FindFirstChild(target)
            if player and player.Character then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = 
                    player.Character.HumanoidRootPart.CFrame
            end
        ]],
        category = "Teleport",
        icon = "rbxassetid://3926307971" -- Teleport icon
    },
    {
        name = "Speed Boost",
        code = [[
            local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 50
            end
        ]],
        category = "Character",
        icon = "rbxassetid://3926305904" -- Speed icon
    },
    {
        name = "Infinite Jump",
        code = [[
            local player = game:GetService("Players").LocalPlayer
            local conn
            conn = game:GetService("UserInputService").JumpRequest:Connect(function()
                if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                    player.Character.Humanoid:ChangeState("Jumping")
                end
            end)
        ]],
        category = "Character",
        icon = "rbxassetid://3926307971" -- Jump icon
    }
}

-- Create main GUI with additional visual layers
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "ArcPremiumEnhanced"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Background glow effect
local glowEffect = Instance.new("ImageLabel", screenGui)
glowEffect.Image = "rbxassetid://5028857084"
glowEffect.Size = UDim2.new(1.5, 0, 1.5, 0)
glowEffect.Position = UDim2.new(-0.25, 0, -0.25, 0)
glowEffect.BackgroundTransparency = 1
glowEffect.ImageColor3 = colors.primary
glowEffect.ImageTransparency = 0.9
glowEffect.ZIndex = 0
glowEffect.Visible = false

-- Main Frame with enhanced visual hierarchy
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 450, 0, 600) -- Larger size
frame.Position = UDim2.new(0.5, -225, 0.5, -300)
frame.BackgroundColor3 = colors.background
frame.BackgroundTransparency = 0.15
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.ClipsDescendants = true
frame.ZIndex = 10

-- Rounded corners
local uiCorner = Instance.new("UICorner", frame)
uiCorner.CornerRadius = UDim.new(0, 14)

-- Animated gold border
local border = Instance.new("UIStroke", frame)
border.Thickness = 3
border.Color = colors.primary
border.Transparency = 0.2
border.LineJoinMode = Enum.LineJoinMode.Round

-- Inner glow effect
local innerGlow = Instance.new("ImageLabel", frame)
innerGlow.Image = "rbxassetid://5028857084"
innerGlow.Size = UDim2.new(1.2, 0, 1.2, 0)
innerGlow.Position = UDim2.new(-0.1, 0, -0.1, 0)
innerGlow.BackgroundTransparency = 1
innerGlow.ImageColor3 = colors.accent
innerGlow.ImageTransparency = 0.95
innerGlow.ZIndex = -1

-- Title Bar with gradient
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 50) -- Taller title bar
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = colors.secondary
titleBar.BorderSizePixel = 0
titleBar.ZIndex = 11

local titleBarCorner = Instance.new("UICorner", titleBar)
titleBarCorner.CornerRadius = UDim.new(0, 14)

-- Title gradient
local titleGradient = Instance.new("UIGradient", titleBar)
titleGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, colors.darkGold),
    ColorSequenceKeypoint.new(0.5, colors.primary),
    ColorSequenceKeypoint.new(1, colors.darkGold)
})
titleGradient.Rotation = 90

-- Title with improved typography
local title = Instance.new("TextLabel", titleBar)
title.Text = "ARC PREMIUM"
title.Size = UDim2.new(0.7, 0, 1, 0)
title.Position = UDim2.new(0, 20, 0, 0)
title.BackgroundTransparency = 1
title.TextColor3 = colors.text
title.Font = Enum.Font.GothamBlack
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextStrokeTransparency = 0.7
title.TextStrokeColor3 = Color3.new(0, 0, 0)

-- Close Button with hover effects
local closeButton = Instance.new("TextButton", titleBar)
closeButton.Text = "Ã—"
closeButton.Size = UDim2.new(0, 50, 0, 50)
closeButton.Position = UDim2.new(1, -50, 0, 0)
closeButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
closeButton.BackgroundTransparency = 0.7
closeButton.TextColor3 = colors.text
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 24
closeButton.ZIndex = 12

local closeCorner = Instance.new("UICorner", closeButton)
closeCorner.CornerRadius = UDim.new(0, 14)

local closeStroke = Instance.new("UIStroke", closeButton)
closeStroke.Thickness = 1
closeStroke.Color = colors.primary
closeStroke.Transparency = 0.5

-- Search Bar with improved UX
local searchContainer = Instance.new("Frame", frame)
searchContainer.Size = UDim2.new(1, -30, 0, 45)
searchContainer.Position = UDim2.new(0, 15, 0, 60)
searchContainer.BackgroundTransparency = 1

local searchBar = Instance.new("TextBox", searchContainer)
searchBar.PlaceholderText = "Search commands..."
searchBar.Size = UDim2.new(1, -50, 1, 0)
searchBar.Position = UDim2.new(0, 0, 0, 0)
searchBar.BackgroundColor3 = colors.secondary
searchBar.BackgroundTransparency = 0.2
searchBar.TextColor3 = colors.text
searchBar.Font = Enum.Font.GothamMedium
searchBar.TextSize = 14
searchBar.BorderSizePixel = 0
searchBar.ClearTextOnFocus = false
searchBar.TextXAlignment = Enum.TextXAlignment.Left
searchBar.PlaceholderColor3 = Color3.new(0.7, 0.7, 0.7)
searchBar.Padding = {Left = UDim.new(0, 15)}

local searchCorner = Instance.new("UICorner", searchBar)
searchCorner.CornerRadius = UDim.new(0, 10)

local searchStroke = Instance.new("UIStroke", searchBar)
searchStroke.Thickness = 1.5
searchStroke.Color = colors.primary
searchStroke.Transparency = 0.4

-- Search Icon with animation
local searchIcon = Instance.new("ImageButton", searchContainer)
searchIcon.Image = "rbxassetid://3926305904"
searchIcon.ImageRectOffset = Vector2.new(964, 324)
searchIcon.ImageRectSize = Vector2.new(36, 36)
searchIcon.Size = UDim2.new(0, 40, 0, 40)
searchIcon.Position = UDim2.new(1, -40, 0.5, -20)
searchIcon.BackgroundColor3 = colors.primary
searchIcon.BackgroundTransparency = 0.2
searchIcon.ImageColor3 = colors.text

local searchIconCorner = Instance.new("UICorner", searchIcon)
searchIconCorner.CornerRadius = UDim.new(0, 10)

local searchIconStroke = Instance.new("UIStroke", searchIcon)
searchIconStroke.Thickness = 1
searchIconStroke.Color = colors.accent
searchIconStroke.Transparency = 0.4

-- Command Scrolling Frame with enhanced visuals
local scrollFrame = Instance.new("ScrollingFrame", frame)
scrollFrame.Size = UDim2.new(1, -30, 1, -180)
scrollFrame.Position = UDim2.new(0, 15, 0, 120)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 6
scrollFrame.ScrollBarImageColor3 = colors.primary
scrollFrame.ScrollBarImageTransparency = 0.7
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

local layout = Instance.new("UIListLayout", scrollFrame)
layout.Padding = UDim.new(0, 12)

-- Add padding at bottom of scroll frame
local padding = Instance.new("Frame", scrollFrame)
padding.Size = UDim2.new(1, 0, 0, 10)
padding.BackgroundTransparency = 1

-- Add Command Button with shine effect
local addButton = Instance.new("TextButton", frame)
addButton.Text = "ADD NEW COMMAND"
addButton.Size = UDim2.new(1, -30, 0, 50)
addButton.Position = UDim2.new(0, 15, 1, -65)
addButton.BackgroundColor3 = colors.primary
addButton.BackgroundTransparency = 0.2
addButton.TextColor3 = colors.text
addButton.Font = Enum.Font.GothamBold
addButton.TextSize = 14
addButton.TextTransparency = 0
addButton.BorderSizePixel = 0
addButton.AutoButtonColor = false

local addCorner = Instance.new("UICorner", addButton)
addCorner.CornerRadius = UDim.new(0, 10)

local addStroke = Instance.new("UIStroke", addButton)
addStroke.Thickness = 1.5
addStroke.Color = colors.accent
addStroke.Transparency = 0.3

-- Shine effect for add button
local shine = Instance.new("Frame", addButton)
shine.Size = UDim2.new(0.3, 0, 2, 0)
shine.Position = UDim2.new(-0.3, 0, -0.5, 0)
shine.BackgroundColor3 = Color3.new(1, 1, 1)
shine.BackgroundTransparency = 0.9
shine.BorderSizePixel = 0
shine.Rotation = 25
shine.ZIndex = 2

local shineCorner = Instance.new("UICorner", shine)
shineCorner.CornerRadius = UDim.new(0, 10)

-- Floating Toggle Button with enhanced design
local floatingButton = Instance.new("ImageButton", screenGui)
floatingButton.Name = "ArcToggle"
floatingButton.Size = UDim2.new(0, 60, 0, 60)
floatingButton.Position = UDim2.new(1, -70, 0.5, -30)
floatingButton.BackgroundColor3 = colors.background
floatingButton.BackgroundTransparency = 0.2
floatingButton.BorderSizePixel = 0
floatingButton.Visible = false
floatingButton.AutoButtonColor = false

local floatingCorner = Instance.new("UICorner", floatingButton)
floatingCorner.CornerRadius = UDim.new(1, 0)

local floatingStroke = Instance.new("UIStroke", floatingButton)
floatingStroke.Thickness = 2
floatingStroke.Color = colors.primary
floatingStroke.Transparency = 0.3

-- Floating button glow
local floatingGlow = Instance.new("ImageLabel", floatingButton)
floatingGlow.Image = "rbxassetid://5028857084"
floatingGlow.Size = UDim2.new(1.5, 0, 1.5, 0)
floatingGlow.Position = UDim2.new(-0.25, 0, -0.25, 0)
floatingGlow.BackgroundTransparency = 1
floatingGlow.ImageColor3 = colors.primary
floatingGlow.ImageTransparency = 0.8
floatingGlow.ZIndex = -1

-- Floating button logo
local logo = Instance.new("ImageLabel", floatingButton)
logo.Image = "rbxassetid://109421193232034" -- Gold crown icon
logo.Size = UDim2.new(0.7, 0, 0.7, 0)
logo.Position = UDim2.new(0.15, 0, 0.15, 0)
logo.BackgroundTransparency = 1
logo.ImageColor3 = colors.primary

-- Function to create enhanced command buttons
local function createCommandButton(commandData, parent)
    local buttonFrame = Instance.new("Frame", parent)
    buttonFrame.Size = UDim2.new(1, 0, 0, 70) -- Taller buttons
    buttonFrame.BackgroundTransparency = 1
    buttonFrame.ZIndex = 1
    
    -- Main button with gradient
    local button = Instance.new("TextButton", buttonFrame)
    button.Text = "  "..commandData.name -- Added padding for icon
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundColor3 = colors.secondary
    button.BackgroundTransparency = 0.15
    button.TextColor3 = colors.text
    button.Font = Enum.Font.GothamMedium
    button.TextSize = 14
    button.TextXAlignment = Enum.TextXAlignment.Left
    button.TextWrapped = true
    button.AutoButtonColor = false
    
    local buttonCorner = Instance.new("UICorner", button)
    buttonCorner.CornerRadius = UDim.new(0, 10)
    
    local buttonStroke = Instance.new("UIStroke", button)
    buttonStroke.Thickness = 1.5
    buttonStroke.Color = colors.primary
    buttonStroke.Transparency = 0.4
    
    -- Button gradient
    local buttonGradient = Instance.new("UIGradient", button)
    buttonGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(0.1, 0.1, 0.1)),
        ColorSequenceKeypoint.new(1, colors.secondary)
    })
    buttonGradient.Rotation = 90
    
    -- Command icon
    if commandData.icon then
        local icon = Instance.new("ImageLabel", button)
        icon.Image = commandData.icon
        icon.Size = UDim2.new(0, 20, 0, 20)
        icon.Position = UDim2.new(0, 10, 0.5, -10)
        icon.BackgroundTransparency = 1
        icon.ImageColor3 = colors.primary
    end
    
    -- Category label with improved design
    local category = Instance.new("TextLabel", button)
    category.Text = string.upper(commandData.category or "MISC")
    category.Size = UDim2.new(0, 90, 0, 22)
    category.Position = UDim2.new(1, -95, 0, 5)
    category.BackgroundColor3 = colors.primary
    category.BackgroundTransparency = 0.7
    category.TextColor3 = colors.text
    category.Font = Enum.Font.GothamBold
    category.TextSize = 10
    category.TextTransparency = 0
    category.BorderSizePixel = 0
    
    local categoryCorner = Instance.new("UICorner", category)
    categoryCorner.CornerRadius = UDim.new(0, 6)
    
    local categoryStroke = Instance.new("UIStroke", category)
    categoryStroke.Thickness = 1
    categoryStroke.Color = colors.accent
    categoryStroke.Transparency = 0.6
    
    -- Edit button with hover effect
    local editButton = Instance.new("TextButton", button)
    editButton.Text = "âœŽ EDIT"
    editButton.Size = UDim2.new(0, 80, 0, 26)
    editButton.Position = UDim2.new(1, -90, 1, -31)
    editButton.BackgroundColor3 = colors.primary
    editButton.BackgroundTransparency = 0.4
    editButton.TextColor3 = colors.text
    editButton.Font = Enum.Font.GothamBold
    editButton.TextSize = 12
    editButton.TextTransparency = 0
    editButton.BorderSizePixel = 0
    editButton.AutoButtonColor = false
    
    local editCorner = Instance.new("UICorner", editButton)
    editCorner.CornerRadius = UDim.new(0, 6)
    
    local editStroke = Instance.new("UIStroke", editButton)
    editStroke.Thickness = 1
    editStroke.Color = colors.accent
    editStroke.Transparency = 0.5
    
    -- Execute button with hover effect
    local executeButton = Instance.new("TextButton", button)
    executeButton.Text = "â–¶ RUN"
    executeButton.Size = UDim2.new(0, 80, 0, 26)
    executeButton.Position = UDim2.new(1, -90, 1, -31)
    executeButton.BackgroundColor3 = Color3.fromRGB(40, 180, 40)
    executeButton.BackgroundTransparency = 0.4
    executeButton.TextColor3 = colors.text
    executeButton.Font = Enum.Font.GothamBold
    executeButton.TextSize = 12
    executeButton.TextTransparency = 0
    executeButton.BorderSizePixel = 0
    executeButton.AutoButtonColor = false
    executeButton.Visible = false
    
    local executeCorner = Instance.new("UICorner", executeButton)
    executeCorner.CornerRadius = UDim.new(0, 6)
    
    local executeStroke = Instance.new("UIStroke", executeButton)
    executeStroke.Thickness = 1
    executeStroke.Color = Color3.fromRGB(80, 255, 80)
    executeStroke.Transparency = 0.5
    
    -- Button hover effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundTransparency = 0.05}):Play()
        TweenService:Create(buttonStroke, TweenInfo.new(0.2), {Transparency = 0.2}):Play()
        executeButton.Visible = true
        editButton.Visible = false
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundTransparency = 0.15}):Play()
        TweenService:Create(buttonStroke, TweenInfo.new(0.2), {Transparency = 0.4}):Play()
        executeButton.Visible = false
        editButton.Visible = true
    end)
    
    -- Execute functionality with visual feedback
    executeButton.MouseButton1Click:Connect(function()
        -- Pulse effect on click
        TweenService:Create(executeButton, TweenInfo.new(0.1), {Size = UDim2.new(0, 75, 0, 23)}):Play()
        TweenService:Create(executeButton, TweenInfo.new(0.1, Enum.EasingStyle.Back), {Size = UDim2.new(0, 80, 0, 26)}):Play()
        
        -- Button glow effect
        local clickGlow = Instance.new("Frame", executeButton)
        clickGlow.Size = UDim2.new(1, 10, 1, 10)
        clickGlow.Position = UDim2.new(0, -5, 0, -5)
        clickGlow.BackgroundColor3 = Color3.fromRGB(80, 255, 80)
        clickGlow.BackgroundTransparency = 0.8
        clickGlow.ZIndex = -1
        
        local glowCorner = Instance.new("UICorner", clickGlow)
        glowCorner.CornerRadius = UDim.new(0, 6)
        
        TweenService:Create(clickGlow, TweenInfo.new(0.5), {Size = UDim2.new(1, 30, 1, 30), Position = UDim2.new(0, -15, 0, -15), BackgroundTransparency = 1}):Play()
        task.delay(0.5, function() clickGlow:Destroy() end)
        
        -- Execute the command
        local success, err = pcall(function()
            loadstring(commandData.code)()
        end)
        
        if not success then
            warn("Command error:", err)
        end
    end)
    
    -- Edit functionality with visual feedback
    editButton.MouseButton1Click:Connect(function()
        -- Pulse effect on click
        TweenService:Create(editButton, TweenInfo.new(0.1), {Size = UDim2.new(0, 75, 0, 23)}):Play()
        TweenService:Create(editButton, TweenInfo.new(0.1, Enum.EasingStyle.Back), {Size = UDim2.new(0, 80, 0, 26)}):Play()
        
        -- Open edit menu (to be implemented)
        print("Editing command:", commandData.name)
    end)
    
    return buttonFrame
end

-- Populate commands with animation
local function populateCommands(commandList)
    -- Clear existing commands with fade out
    for _, child in ipairs(scrollFrame:GetChildren()) do
        if child:IsA("Frame") then
            TweenService:Create(child, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, 0), Position = UDim2.new(0, 0, 0, child.Position.Y.Offset)}):Play()
            task.delay(0.2, function() child:Destroy() end)
        end
    end
    
    task.wait(0.2)
    
    -- Add new commands with fade in
    for i, cmd in ipairs(commandList) do
        local button = createCommandButton(cmd, scrollFrame)
        button.Size = UDim2.new(1, 0, 0, 0)
        button.Position = UDim2.new(0, 0, 0, (i-1)*82)
        
        task.wait(0.05)
        TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(1, 0, 0, 70)}):Play()
    end
end

-- Enhanced search functionality
searchBar:GetPropertyChangedSignal("Text"):Connect(function()
    local searchText = string.lower(searchBar.Text)
    
    -- Animate search icon
    TweenService:Create(searchIcon, TweenInfo.new(0.2), {Size = UDim2.new(0, 35, 0, 35)}):Play()
    TweenService:Create(searchIcon, TweenInfo.new(0.2, Enum.EasingStyle.Back), {Size = UDim2.new(0, 40, 0, 40)}):Play()
    
    if searchText == "" then
        populateCommands(commands)
        return
    end
    
    local filtered = {}
    for _, cmd in ipairs(commands) do
        if string.find(string.lower(cmd.name), searchText) or 
           (cmd.category and string.find(string.lower(cmd.category), searchText)) then
            table.insert(filtered, cmd)
        end
    end
    
    populateCommands(filtered)
end)

-- Search icon click effect
searchIcon.MouseButton1Click:Connect(function()
    TweenService:Create(searchIcon, TweenInfo.new(0.1), {Rotation = 10}):Play()
    TweenService:Create(searchIcon, TweenInfo.new(0.1, Enum.EasingStyle.Back), {Rotation = 0}):Play()
    
    if searchBar.Text ~= "" then
        searchBar.Text = ""
    else
        searchBar:CaptureFocus()
    end
end)

-- Toggle GUI visibility with animations
local function toggleGUI()
    if frame.Visible then
        -- Hide main frame
        glowEffect.Visible = true
        TweenService:Create(glowEffect, TweenInfo.new(0.3), {ImageTransparency = 0.7}):Play()
        TweenService:Create(frame, TweenInfo.new(0.3), {Size = UDim2.new(0, 0, 0, 600), Position = UDim2.new(0.5, 0, 0.5, -300)}):Play()
        
        task.wait(0.3)
        frame.Visible = false
        
        -- Show floating button
        floatingButton.Visible = true
        floatingButton.Size = UDim2.new(0, 0, 0, 0)
        floatingButton.Position = UDim2.new(0.5, 0, 0.5, 0)
        TweenService:Create(floatingButton, TweenInfo.new(0.4, Enum.EasingStyle.Back), {Size = UDim2.new(0, 60, 0, 60), Position = UDim2.new(1, -70, 0.5, -30)}):Play()
    else
        -- Hide floating button
        TweenService:Create(floatingButton, TweenInfo.new(0.3), {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
        task.wait(0.3)
        floatingButton.Visible = false
        
        -- Show main frame
        frame.Visible = true
        frame.Size = UDim2.new(0, 0, 0, 600)
        frame.Position = UDim2.new(0.5, 0, 0.5, -300)
        TweenService:Create(frame, TweenInfo.new(0.4, Enum.EasingStyle.Back), {Size = UDim2.new(0, 450, 0, 600), Position = UDim2.new(0.5, -225, 0.5, -300)}):Play()
        
        TweenService:Create(glowEffect, TweenInfo.new(0.3), {ImageTransparency = 0.9}):Play()
        task.wait(0.3)
        glowEffect.Visible = false
    end
end

-- Add button effects
addButton.MouseEnter:Connect(function()
    TweenService:Create(addButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.1}):Play()
    TweenService:Create(addStroke, TweenInfo.new(0.2), {Transparency = 0.1}):Play()
    TweenService:Create(shine, TweenInfo.new(0.2), {Position = UDim2.new(1.3, 0, -0.5, 0)}):Play()
end)

addButton.MouseLeave:Connect(function()
    TweenService:Create(addButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.2}):Play()
    TweenService:Create(addStroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
    TweenService:Create(shine, TweenInfo.new(0.2), {Position = UDim2.new(-0.3, 0, -0.5, 0)}):Play()
end)

addButton.MouseButton1Click:Connect(function()
    -- Pulse effect
    TweenService:Create(addButton, TweenInfo.new(0.1), {Size = UDim2.new(1, -35, 0, 45)}):Play()
    TweenService:Create(addButton, TweenInfo.new(0.1, Enum.EasingStyle.Back), {Size = UDim2.new(1, -30, 0, 50)}):Play()
    
    -- Shine effect
    TweenService:Create(shine, TweenInfo.new(0.5), {Position = UDim2.new(1.3, 0, -0.5, 0)}):Play()
    task.delay(0.5, function()
        shine.Position = UDim2.new(-0.3, 0, -0.5, 0)
    end)
    
    -- Open command creation UI (to be implemented)
    print("Add new command clicked")
end)

-- Close button effects
closeButton.MouseEnter:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.5}):Play()
    TweenService:Create(closeStroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
end)

closeButton.MouseLeave:Connect(function()
    TweenService:Create(closeButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.7}):Play()
    TweenService:Create(closeStroke, TweenInfo.new(0.2), {Transparency = 0.5}):Play()
end)
-- Floating button effects
floatingButton.MouseEnter:Connect(function()
    TweenService:Create(floatingButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.1}):Play()
    TweenService:Create(floatingStroke, TweenInfo.new(0.2), {Transparency = 0.1}):Play()
    TweenService:Create(floatingGlow, TweenInfo.new(0.2), {ImageTransparency = 0.6}):Play()
end)

floatingButton.MouseLeave:Connect(function()
    TweenService:Create(floatingButton, TweenInfo.new(0.2), {BackgroundTransparency = 0.2}):Play()
    TweenService:Create(floatingStroke, TweenInfo.new(0.2), {Transparency = 0.3}):Play()
    TweenService:Create(floatingGlow, TweenInfo.new(0.2), {ImageTransparency = 0.8}):Play()
end)

floatingButton.MouseButton1Click:Connect(function()
    -- Click effect
    TweenService:Create(floatingButton, TweenInfo.new(0.1), {Size = UDim2.new(0, 55, 0, 55)}):Play()
    TweenService:Create(floatingButton, TweenInfo.new(0.1, Enum.EasingStyle.Back), {Size = UDim2.new(0, 60, 0, 60)}):Play()
    
    toggleGUI()
end)

-- Mobile touch support for floating button
local isDragging = false
local dragStartPos = nil
local dragOffset = nil

floatingButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
        dragStartPos = floatingButton.Position
        dragOffset = UDim2.new(0, input.Position.X, 0, input.Position.Y) - dragStartPos
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch and isDragging then
        floatingButton.Position = UDim2.new(0, input.Position.X, 0, input.Position.Y) - dragOffset
    end
end)

floatingButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

-- Gold shimmer effects
task.spawn(function()
    while true do
        for i = 0, 1, 0.01 do
            border.Transparency = 0.2 + (math.sin(i * math.pi) * 0.15)
            innerGlow.ImageTransparency = 0.95 + (math.sin(i * math.pi) * 0.03)
            task.wait(0.05)
        end
    end
end)

-- Shine animation for add button
task.spawn(function()
    while true do
        TweenService:Create(shine, TweenInfo.new(1.5), {Position = UDim2.new(1.3, 0, -0.5, 0)}):Play()
        task.wait(1.5)
        shine.Position = UDim2.new(-0.3, 0, -0.5, 0)
        task.wait(3)
    end
end)

-- Initial setup
populateCommands(commands)
frame.Visible = true
floatingButton.Visible = false

-- Welcome effects
task.spawn(function()
    task.wait(1)
    
    -- Initial glow pulse
    glowEffect.Visible = true
    glowEffect.ImageTransparency = 0.7
    TweenService:Create(glowEffect, TweenInfo.new(1), {ImageTransparency = 0.9}):Play()
    task.wait(1)
    glowEffect.Visible = false
    
    -- Button attention pulse
    for i = 1, 2 do
        TweenService:Create(addStroke, TweenInfo.new(0.5), {Thickness = 3}):Play()
        TweenService:Create(addStroke, TweenInfo.new(0.5), {Transparency = 0.1}):Play()
        task.wait(0.5)
        TweenService:Create(addStroke, TweenInfo.new(0.5), {Thickness = 1.5}):Play()
        TweenService:Create(addStroke, TweenInfo.new(0.5), {Transparency = 0.3}):Play()
        task.wait(0.5)
    end
end)
```